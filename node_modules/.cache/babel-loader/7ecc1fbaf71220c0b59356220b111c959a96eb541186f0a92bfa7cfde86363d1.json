{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenne\\\\OneDrive\\\\Documents\\\\GitHub\\\\claw-and-order\\\\Night-Kitchen-Projects\\\\src\\\\Components\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect } from \"react\";\nimport { useMachine } from '@xstate/react';\nimport { fetchMachine } from \"../Utility/myFirstMachine\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Card = () => {\n  _s();\n  const [fetchState, sendToFetchMachine] = useMachine(fetchMachine, {\n    actions: {\n      fetchData: (context, event) => {}\n    }\n  });\n  // state.value                -> current state\n  // send({ type: TRANSITION }) -> transition between states\n\n  const URL = \"https://api.thecatapi.com/v1/images/search\";\n  const LIMIT = 10;\n  const KEY = \"live_3H0P5gLpYlRVspXYdZgndGhjKVNAnTR2Mv634ZpCjkAbdlW75qNWsgCKz7SaeJ9B\";\n  const HAS_BREEDS = 1;\n  const apiLink = `${URL}?limit=${LIMIT}?has_breeds=${H}&api_key=${KEY}`;\n  const requestOptions = {\n    method: \"GET\",\n    redirect: \"follow\"\n  };\n  useEffect(() => {\n    console.log(\"Test\");\n    function fetchCats() {\n      fetch(apiLink, requestOptions).then(response => response.json()).then(result => console.log(result)).catch(error => console.error(error));\n    }\n    // fetchCats();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [JSON.stringify(fetchState.value), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        sendToFetchMachine({\n          type: \"MOUSEOVER\"\n        });\n      },\n      children: \"MOUSEOVER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        sendToFetchMachine({\n          type: \"MOUSEOUT\"\n        });\n      },\n      children: \"MOUSEOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"zo/cXyJgkDRlzmKzNuXR7qdnFGs=\", false, function () {\n  return [useMachine];\n});\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useEffect","useMachine","fetchMachine","jsxDEV","_jsxDEV","Card","_s","fetchState","sendToFetchMachine","actions","fetchData","context","event","URL","LIMIT","KEY","HAS_BREEDS","apiLink","H","requestOptions","method","redirect","console","log","fetchCats","fetch","then","response","json","result","catch","error","children","JSON","stringify","value","onClick","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kenne/OneDrive/Documents/GitHub/claw-and-order/Night-Kitchen-Projects/src/Components/Card.jsx"],"sourcesContent":["import React from 'react'\r\nimport {useEffect} from \"react\"\r\nimport { useMachine } from '@xstate/react'\r\nimport { fetchMachine } from \"../Utility/myFirstMachine\"\r\n\r\n\r\nexport const Card = () => {\r\n  const [fetchState, sendToFetchMachine] = useMachine(fetchMachine, {\r\n    actions: {\r\n      fetchData: (context, event) => {\r\n\r\n      }\r\n    }\r\n  });\r\n  // state.value                -> current state\r\n  // send({ type: TRANSITION }) -> transition between states\r\n\r\n  const URL = \"https://api.thecatapi.com/v1/images/search\";\r\n  const LIMIT = 10;\r\n  const KEY = \"live_3H0P5gLpYlRVspXYdZgndGhjKVNAnTR2Mv634ZpCjkAbdlW75qNWsgCKz7SaeJ9B\";\r\n  const HAS_BREEDS = 1;\r\n  const apiLink = `${URL}?limit=${LIMIT}?has_breeds=${H}&api_key=${KEY}`;\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    redirect: \"follow\"\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"Test\")\r\n    function fetchCats(){\r\n      fetch(apiLink, requestOptions).then(\r\n        (response) => response.json()\r\n      ).then(\r\n        (result) => console.log(result)\r\n      ).catch(\r\n        (error) => console.error(error));\r\n    }\r\n    // fetchCats();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {JSON.stringify(fetchState.value)}\r\n      <button\r\n        onClick = {() => {sendToFetchMachine({ type: \"MOUSEOVER\" });}}>\r\n          MOUSEOVER\r\n      </button>\r\n      <button\r\n        onClick = {() => {sendToFetchMachine({ type: \"MOUSEOUT\" });}}>\r\n          MOUSEOUT\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n  \r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,QAAO,OAAO;AAC/B,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,YAAY,QAAQ,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGxD,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,kBAAkB,CAAC,GAAGP,UAAU,CAACC,YAAY,EAAE;IAChEO,OAAO,EAAE;MACPC,SAAS,EAAEA,CAACC,OAAO,EAAEC,KAAK,KAAK,CAE/B;IACF;EACF,CAAC,CAAC;EACF;EACA;;EAEA,MAAMC,GAAG,GAAG,4CAA4C;EACxD,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,GAAG,GAAG,uEAAuE;EACnF,MAAMC,UAAU,GAAG,CAAC;EACpB,MAAMC,OAAO,GAAG,GAAGJ,GAAG,UAAUC,KAAK,eAAeI,CAAC,YAAYH,GAAG,EAAE;EACtE,MAAMI,cAAc,GAAG;IACrBC,MAAM,EAAE,KAAK;IACbC,QAAQ,EAAE;EACZ,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACdsB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,SAASC,SAASA,CAAA,EAAE;MAClBC,KAAK,CAACR,OAAO,EAAEE,cAAc,CAAC,CAACO,IAAI,CAChCC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAC9B,CAAC,CAACF,IAAI,CACHG,MAAM,IAAKP,OAAO,CAACC,GAAG,CAACM,MAAM,CAChC,CAAC,CAACC,KAAK,CACJC,KAAK,IAAKT,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC,CAAC;IACpC;IACA;EACF,CAAC,CAAC;EAEF,oBACE3B,OAAA;IAAA4B,QAAA,GACGC,IAAI,CAACC,SAAS,CAAC3B,UAAU,CAAC4B,KAAK,CAAC,eACjC/B,OAAA;MACEgC,OAAO,EAAIA,CAAA,KAAM;QAAC5B,kBAAkB,CAAC;UAAE6B,IAAI,EAAE;QAAY,CAAC,CAAC;MAAC,CAAE;MAAAL,QAAA,EAAC;IAEjE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTrC,OAAA;MACEgC,OAAO,EAAIA,CAAA,KAAM;QAAC5B,kBAAkB,CAAC;UAAE6B,IAAI,EAAE;QAAW,CAAC,CAAC;MAAC,CAAE;MAAAL,QAAA,EAAC;IAEhE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAAnC,EAAA,CA/CYD,IAAI;EAAA,QAC0BJ,UAAU;AAAA;AAAAyC,EAAA,GADxCrC,IAAI;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}